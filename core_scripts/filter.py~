import numpy as np
import os
from PIL import Image
from shutil import copyfile

main_dir = '/Users/cole/Dropbox/Courses/machine_learning/Machine-Learners/class_project/data/images/tiles'
img_dir = main_dir+'/image_tiles'
label_dir = main_dir+'/label_tiles'

#Finds and sort all files in datafolder subfolders (image_tiles and label_tiles)                                                              
img_names = sorted(os.listdir(img_dir))

img_names.sort(key = lambda x: x.split('_',)[6])

label_names = sorted(os.listdir(label_dir))
label_names.sort(key = lambda x: x.split('_',)[4])

def get_color(file):

    img = Image.open(file)
    colors = Image.Image.getcolors(img)

    return colors

no_label = []
is_label = []

for ind,img in enumerate(label_names):
 
    print("=========================")
    print("Now filtering image ", str(img), 'to find tiles with lables corresponding to ', str(label_names[ind]))
    colors = get_color(label_dir+'/'+str(img))
        
    if len(colors) > 1:
        #this indicates there are pixels corresponding to labels. We copy both the image and the labels into a filtered directory
        copyfile(label_dir+'/'+img, main_dir+'/filtered_label_tiles/'+img)
        copyfile(img_dir+'/'+img_names[ind], main_dir+'/filtered_image_tiles/'+img_names[ind])

        no_label.append(img)
    
    else:
        is_label.append(img)       

print("Total labeled tiles: ", len(is_label))
print("Total tiles: ", len(img_names))
          
